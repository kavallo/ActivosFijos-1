<?xml version="1.0"?>
<doc>
<assembly>
<name>
Citi.Synergia.DB
</name>
</assembly>
<members>
<member name="M:Citi.Synergia.DB.SQL.GetConexion">
 <summary>
 Retorna objeto SqlConnection de SQL Server.
 </summary>
 <returns>Objeto SqlConnection</returns>
 <remarks>Toma de base el string de conexion enviada previamente a ConexionSTR</remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.CerrarConexion(System.Data.SqlClient.SqlConnection)">
 <summary>
 Termina conexion con SQL Server.
 </summary>
 <param name="conexion"></param>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.ValidarConexion">
 <summary>
 Una vez configurado string de conexion, puede validarse si puede conectarse, si variable de ConexionSQL estuviera en null.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.GetCadena(System.String)">
 <summary>
 Retorna un string en base a query enviado.
 </summary>
 <param name="transactSQL">Sentencia SQL para query.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.GetDataSet(System.Data.SqlClient.SqlCommand)">
 <summary>
 Retorna dataset, enviando SqlCommand como parametro.
 </summary>
 <param name="comando"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.GetDataSet(System.String)">
 <summary>
 Retorna DataSet, enviando sentencia SQL como parametro.
 </summary>
 <param name="transactSQL"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.AgregarWhere(System.String@)">
 <summary>
 Valida que sentencia SQL contenga clausula Where.
 </summary>
 <param name="strSQL">Tipo String</param>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.AgregarWhere(System.Text.StringBuilder@)">
 <summary>
 Valida que sentencia SQL contenga clausula where.
 </summary>
 <param name="strSQL">Tipo StringBuilder</param>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.EjecutarComando(System.Data.SqlClient.SqlCommand@)">
 <summary>
 Ejecuta instruccion SQL con comando como parametro.
 </summary>
 <param name="comando"></param>
 <returns>Si clausula SQL retorna valor de conteo</returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.EjecutarComando(System.String)">
 <summary>
 Ejecuta instruccion SQL con sentencia SQL como parametro
 </summary>
 <param name="transactSQL"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.EjecutarScalar(System.Data.SqlClient.SqlCommand)">
 <summary>
 Ejecuta sentencia SQL enviando comando como parametro.
 </summary>
 <param name="comando"></param>
 <returns>Un solo objeto</returns>
 <remarks></remarks>
</member>
<member name="M:Citi.Synergia.DB.SQL.EjecutarScalar(System.String)">
 <summary>
 Ejecuta sentencia SQL enviando como parametro string como parametro
 </summary>
 <param name="transactSQL"></param>
 <returns>Un solo objeto</returns>
 <remarks></remarks>
</member>
<member name="T:Citi.Synergia.DB.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Citi.Synergia.DB.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Citi.Synergia.DB.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
</members>
</doc>
